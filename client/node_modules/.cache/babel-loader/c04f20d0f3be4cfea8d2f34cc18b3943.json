{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Memories Project\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState } from \"react\";\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { createPost } from '../../actions/posts';\n\nconst Form = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault(); //dispatching the post data we get from the form to the actions\n    //to create the posts\n\n    dispatch(createPost(postData));\n  };\n\n  const clear = () => {};\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Creating a Memort\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator //since we are set the values of each of the fields one after another if we dont spread the data using\n    //..posData only the last Field value will be set and the remaining gets replaced.\n    ,\n    onChange: e => setPostData({ ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref => {\n      let {\n        base64\n      } = _ref;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contianed\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contianed\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","createPost","Form","dispatch","handleSubmit","e","preventDefault","postData","clear","setPostData","creator","title","message","tags","selectedFile","classes","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"sources":["C:/Users/user/Desktop/Memories Project/client/src/components/Form/Form.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport useStyles from './styles';\r\nimport  {TextField,Button,Typography,Paper} from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nimport {createPost} from  '../../actions/posts';\r\n\r\nconst Form=() =>{\r\n\r\n    const dispatch=useDispatch();\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        //dispatching the post data we get from the form to the actions\r\n        //to create the posts\r\n        dispatch(createPost(postData));\r\n    }\r\n    const clear=()=>{\r\n\r\n    }\r\n\r\n    const [postData,setPostData]=useState({\r\n        creator: '', title: '', message: '', tags: '',selectedFile: ''});\r\n    const classes=useStyles();\r\n    return(\r\n        < Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n            <Typography variant=\"h6\">Creating a Memort</Typography>\r\n            <TextField \r\n            name=\"creator\" \r\n            variant=\"outlined\" \r\n            label=\"Creator\" fullWidth\r\n            value={postData.creator}\r\n            //since we are set the values of each of the fields one after another if we dont spread the data using\r\n            //..posData only the last Field value will be set and the remaining gets replaced.\r\n            onChange={(e) => setPostData({...postData,creator:e.target.value})}/>\r\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({...postData,title:e.target.value})}/>\r\n            <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({...postData,message:e.target.value})}/>\r\n            <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({...postData,tags:e.target.value})}/>\r\n            \r\n            <div className={classes.fileInput}>\r\n                <FileBase\r\n                    type=\"file\"\r\n                    multiple={false}\r\n                    onDone={({base64})=>setPostData({...postData,selectedFile:base64})}\r\n\r\n\r\n                />\r\n            </div>\r\n            <Button className={classes.buttonSubmit} variant=\"contianed\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n            <Button variant=\"contianed\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,SAAT,EAAmBC,MAAnB,EAA0BC,UAA1B,EAAqCC,KAArC,QAAiD,mBAAjD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,SAAQC,UAAR,QAA0B,qBAA1B;;AAEA,MAAMC,IAAI,GAAC,MAAK;EAEZ,MAAMC,QAAQ,GAACH,WAAW,EAA1B;;EACA,MAAMI,YAAY,GAAEC,CAAD,IAAK;IACpBA,CAAC,CAACC,cAAF,GADoB,CAGpB;IACA;;IACAH,QAAQ,CAACF,UAAU,CAACM,QAAD,CAAX,CAAR;EACH,CAND;;EAOA,MAAMC,KAAK,GAAC,MAAI,CAEf,CAFD;;EAIA,MAAM,CAACD,QAAD,EAAUE,WAAV,IAAuBhB,QAAQ,CAAC;IAClCiB,OAAO,EAAE,EADyB;IACrBC,KAAK,EAAE,EADc;IACVC,OAAO,EAAE,EADC;IACGC,IAAI,EAAE,EADT;IACYC,YAAY,EAAE;EAD1B,CAAD,CAArC;EAEA,MAAMC,OAAO,GAACrB,SAAS,EAAvB;EACA,oBACI,oBAAE,KAAF;IAAQ,SAAS,EAAEqB,OAAO,CAACC,KAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAM,YAAY,EAAC,KAAnB;IAAyB,UAAU,MAAnC;IAAoC,SAAS,EAAG,GAAED,OAAO,CAACE,IAAK,IAAGF,OAAO,CAACG,IAAK,EAA/E;IAAkF,QAAQ,EAAEd,YAA5F;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,UAAD;IAAY,OAAO,EAAC,IAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,uBADA,eAEA,oBAAC,SAAD;IACA,IAAI,EAAC,SADL;IAEA,OAAO,EAAC,UAFR;IAGA,KAAK,EAAC,SAHN;IAGgB,SAAS,MAHzB;IAIA,KAAK,EAAEG,QAAQ,CAACG,OAJhB,CAKA;IACA;IANA;IAOA,QAAQ,EAAGL,CAAD,IAAOI,WAAW,CAAC,EAAC,GAAGF,QAAJ;MAAaG,OAAO,EAACL,CAAC,CAACc,MAAF,CAASC;IAA9B,CAAD,CAP5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFA,eAUA,oBAAC,SAAD;IAAW,IAAI,EAAC,OAAhB;IAAwB,OAAO,EAAC,UAAhC;IAA2C,KAAK,EAAC,OAAjD;IAAyD,SAAS,MAAlE;IAAmE,KAAK,EAAEb,QAAQ,CAACI,KAAnF;IAA0F,QAAQ,EAAGN,CAAD,IAAOI,WAAW,CAAC,EAAC,GAAGF,QAAJ;MAAaI,KAAK,EAACN,CAAC,CAACc,MAAF,CAASC;IAA5B,CAAD,CAAtH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAVA,eAWA,oBAAC,SAAD;IAAW,IAAI,EAAC,SAAhB;IAA0B,OAAO,EAAC,UAAlC;IAA6C,KAAK,EAAC,SAAnD;IAA6D,SAAS,MAAtE;IAAuE,KAAK,EAAEb,QAAQ,CAACK,OAAvF;IAAgG,QAAQ,EAAGP,CAAD,IAAOI,WAAW,CAAC,EAAC,GAAGF,QAAJ;MAAaK,OAAO,EAACP,CAAC,CAACc,MAAF,CAASC;IAA9B,CAAD,CAA5H;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXA,eAYA,oBAAC,SAAD;IAAW,IAAI,EAAC,MAAhB;IAAuB,OAAO,EAAC,UAA/B;IAA0C,KAAK,EAAC,MAAhD;IAAuD,SAAS,MAAhE;IAAiE,KAAK,EAAEb,QAAQ,CAACM,IAAjF;IAAuF,QAAQ,EAAGR,CAAD,IAAOI,WAAW,CAAC,EAAC,GAAGF,QAAJ;MAAaM,IAAI,EAACR,CAAC,CAACc,MAAF,CAASC;IAA3B,CAAD,CAAnH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZA,eAcA;IAAK,SAAS,EAAEL,OAAO,CAACM,SAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,QAAD;IACI,IAAI,EAAC,MADT;IAEI,QAAQ,EAAE,KAFd;IAGI,MAAM,EAAE;MAAA,IAAC;QAACC;MAAD,CAAD;MAAA,OAAYb,WAAW,CAAC,EAAC,GAAGF,QAAJ;QAAaO,YAAY,EAACQ;MAA1B,CAAD,CAAvB;IAAA,CAHZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CAdA,eAuBA,oBAAC,MAAD;IAAQ,SAAS,EAAEP,OAAO,CAACQ,YAA3B;IAAyC,OAAO,EAAC,WAAjD;IAA6D,KAAK,EAAC,SAAnE;IAA6E,IAAI,EAAC,OAAlF;IAA0F,IAAI,EAAC,QAA/F;IAAwG,SAAS,MAAjH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAvBA,eAwBA,oBAAC,MAAD;IAAQ,OAAO,EAAC,WAAhB;IAA4B,KAAK,EAAC,WAAlC;IAA8C,IAAI,EAAC,OAAnD;IAA2D,OAAO,EAAEf,KAApE;IAA2E,SAAS,MAApF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAxBA,CADJ,CADJ;AA8BH,CA/CD;;AAiDA,eAAeN,IAAf"},"metadata":{},"sourceType":"module"}