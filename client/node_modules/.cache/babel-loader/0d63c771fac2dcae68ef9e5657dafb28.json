{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Memories Project\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState } from \"react\";\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\n\nconst Form = () => {\n  const handleSubmit = () => {};\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Creating a Memort\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator //since we are set the values of each of the fields one after another if we dont spread the data using\n    //..posData only the last Field value will be set and the remaining gets replaced.\n    ,\n    onChange: e => setPostData({ ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"selectedFile\",\n    variant: \"outlined\",\n    label: \"SelectedFile\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      selectedFile: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useStyles","TextField","Button","Typography","Paper","Form","handleSubmit","postData","setPostData","creator","title","message","tags","selectedFile","classes","paper","form","e","target","value"],"sources":["C:/Users/user/Desktop/Memories Project/client/src/components/Form/Form.js"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport useStyles from './styles';\r\nimport  {TextField,Button,Typography,Paper} from '@material-ui/core';\r\n\r\n\r\n\r\nconst Form=() =>{\r\n    const handleSubmit=()=>{\r\n\r\n    }\r\n\r\n    const [postData,setPostData]=useState({\r\n        creator: '', title: '', message: '', tags: '',selectedFile: ''});\r\n    const classes=useStyles();\r\n    return(\r\n        < Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={classes.form} onSubmit={handleSubmit}>\r\n            <Typography variant=\"h6\">Creating a Memort</Typography>\r\n            <TextField \r\n            name=\"creator\" \r\n            variant=\"outlined\" \r\n            label=\"Creator\" fullWidth\r\n            value={postData.creator}\r\n            //since we are set the values of each of the fields one after another if we dont spread the data using\r\n            //..posData only the last Field value will be set and the remaining gets replaced.\r\n            onChange={(e) => setPostData({...postData,creator:e.target.value})}/>\r\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.creator} onChange={(e) => setPostData({...postData,title:e.target.value})}/>\r\n            <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.creator} onChange={(e) => setPostData({...postData,message:e.target.value})}/>\r\n            <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.creator} onChange={(e) => setPostData({...postData,tags:e.target.value})}/>\r\n            <TextField name=\"selectedFile\" variant=\"outlined\" label=\"SelectedFile\" fullWidth value={postData.creator} onChange={(e) => setPostData({...postData,selectedFile:e.target.value})}/>\r\n            \r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}